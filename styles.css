body {
  margin: 0;
  background-color: #03374c;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: sans-serif;
}

/* SAVE BUTTON */

.button {
  padding: 16px 42px;
  box-shadow: 0px 0px 12px -2px rgba(0, 0, 0, 0.5);
  line-height: 1.25;
  background: #fc6e51;
  text-decoration: none;
  color: white;
  font-size: 16px;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  position: relative;
  transition: background-color 0.6s ease;
  overflow: hidden;
}
.button:after {
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  transform-style: flat;
  transform: translate3d(-50%, -50%, 0);
  background: rgba(255, 255, 255, 0.1);
  border-radius: 100%;
  transition: width 0.3s ease, height 0.3s ease;
}
.button:focus,
.button:hover {
  background: #fb512e;
}
.button:active:after {
  width: 300px;
  height: 300px;
}

/* END OF SAVE BUTTON */

/* MODAL */
/* Modal background */
.modalBackgournd {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  height: 100%;
  width: 100%;
  /* background: rgba(0, 0, 0, 0.8); */
  /* if i want the glass background i can comment the line above and use the bellow code */
  background-color: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(80px);
}

/* modal box for loader */
.modal-box {
  position: fixed;
  display: none;
  left: 50%;
  transform: translate(-50%, 0);
  top: 50%;
  width: 400px;
  background: #fff;
  color: #333;
  position: relative;
  animation: ModalLoading 1s;
}

@keyframes ModalLoading {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* END OF MODAL */

/* START OF LOADING SPINNER  */

/* set variable for the content of the :before element so i can manipulate that from js
since i cant change pseudo elements directly from javascript */
:root {
  --beforeElementBorder: 3px;
  --loadingLineHeight: 20px;
  /* if i remove the display propery flex i should change the line height to 150px */
}

.ring {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 150px;
  height: 150px;
  background: transparent;
  /* border: 3px solid #3c3c3c; */
  border-radius: 50%;
  text-align: center;
  line-height: var(--loadingLineHeight);
  font-family: sans-serif;
  font-size: 20px;
  color: #fb512e;
  letter-spacing: 4px;
  text-transform: uppercase;
  text-shadow: 0 0 10px #fb512e;
  /* box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); */
  display: flex;
  justify-content: center;
  align-items: center;
}
.ring:before {
  content: "";
  position: absolute;
  top: -3px;
  left: -3px;
  width: 100%;
  height: 100%;
  border: var(--beforeElementBorder) solid transparent;
  border-top: var(--beforeElementBorder) solid #fb512e;
  border-right: var(--beforeElementBorder) solid #fb512e;
  border-radius: 50%;
  animation: animateC 2s linear infinite;
}

.LoadingText {
  margin: 0;
  padding: 0;
}
span {
  display: block;
  position: absolute;
  top: calc(50% - 2px);
  left: 50%;
  width: 50%;
  height: 4px;
  background: transparent;
  transform-origin: left;
  animation: animate 2s linear infinite;
}
span:before {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #fb512e;
  top: -6px;
  right: -8px;
  box-shadow: 0 0 20px #fb512e;
}
@keyframes animateC {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes animate {
  0% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(405deg);
  }
}
/* END OF LOADING SPINNER  */
